{"version":3,"file":"static/js/148.6ab5242d.chunk.js","mappings":"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","sources":["components/Blog/BlogPost.js","components/utils/api.js","pages/Blog.js"],"sourcesContent":["// BlogPost.js\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nconst BlogPost = ({ blogPost }) => (\n  <div className=\"blog-post\">\n    <h3>{blogPost.title}</h3>\n    {/* <p>{blogPost.date.toString()}</p>\n    <div className=\"body\">{blogPost.body}</div> */}\n    <ReactMarkdown\n      source={blogPost.body}\n      // renderers={{\n      //   Link: LinkRenderer,\n      // }}\n      escapeHtml={false}\n    />\n  </div>\n);\n\n//   <div className=\"blog-container\">\n//     <article className=\"mini-post\">\n//       <header>\n//         <h3><a href={data.link} target=\"_blank\" rel=\"noopener noreferrer\">{data.title}</a></h3>\n//       </header>\n//       <a href={data.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"image\">\n//         <img src={`${process.env.PUBLIC_URL}${data.image}`} alt={data.title} />\n//       </a>\n//       <div className=\"description\">\n//         <p>{data.desc}</p>\n//       </div>\n//     </article>\n\nBlogPost.propTypes = {\n  blogPost: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    date: PropTypes.instanceOf(Date).isRequired,\n  }).isRequired,\n};\n\nexport default BlogPost;\n","// utils/api.js\nimport fm from 'front-matter';\nimport blogFileNames from '../../data/blog/blogFileNames.json';\n\nconst getBlogPosts = async () => {\n  const blogsDirectory = '../data/blog';\n\n  const fetchPromises = blogFileNames\n    .filter((fileName) => fileName.endsWith('.md'))\n    .map(async (fileName) => {\n      const filePath = `${blogsDirectory}/${fileName}`;\n      const fileResponse = await fetch(filePath);\n      const fileContent = await fileResponse.text();\n\n      const { attributes, body } = fm(fileContent);\n\n      return {\n        id: fileName.replace(/\\.md$/, ''),\n        title: attributes.title,\n        body,\n        date: attributes.date,\n      };\n    });\n\n  const posts = await Promise.all(fetchPromises);\n\n  return posts;\n};\n\nexport default getBlogPosts;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport BlogPost from '../components/Blog/BlogPost';\nimport getBlogPosts from '../components/utils/api'; // Assuming you have a separate utility file for API functions\nimport Main from '../layouts/Main';\n\nconst Blog = () => {\n  const [blogPosts, setBlogPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchBlogPosts = async () => {\n      try {\n        const posts = await getBlogPosts();\n        setBlogPosts(posts);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchBlogPosts();\n  }, []);\n\n  return (\n    <Main title=\"Blog\" description=\"Matthew Trang's blog\">\n      <article className=\"post markdown\" id=\"blog\">\n        <header>\n          <div className=\"title\">\n            <h2 data-testid=\"heading\"><Link to=\"/blog\">Blog</Link></h2>\n            <p>Here I attempt to present my thoughts in a coherent form</p>\n          </div>\n        </header>\n        {blogPosts.map((blogPost) => (\n          <article>\n            <BlogPost key={blogPost.id} blogPost={blogPost} />\n          </article>\n        ))}\n      </article>\n    </Main>\n  );\n};\n\nexport default Blog;\n"],"names":["_ref","blogPost","_jsxs","className","children","_jsx","title","ReactMarkdown","source","body","escapeHtml","getBlogPosts","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","fetchPromises","posts","wrap","_context2","prev","next","blogFileNames","filter","fileName","endsWith","map","_ref2","_callee","filePath","fileResponse","fileContent","_fm","attributes","_context","concat","fetch","sent","text","fm","abrupt","id","replace","date","stop","_x","apply","arguments","Promise","all","_useState","useState","_useState2","_slicedToArray","blogPosts","setBlogPosts","useEffect","fetchBlogPosts","t0","console","error","Main","description","Link","to","BlogPost"],"sourceRoot":""}